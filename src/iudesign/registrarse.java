/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iudesign;

import Clases.ComprobarConexionInternet;
import Clases.SimpleFactory;
import Clases.conectarBD;
import static com.sun.javafx.tk.Toolkit.getToolkit;
import java.awt.event.ItemEvent;
import javax.swing.*;
import javax.swing.event.*;

/**
 *
 * @author m98am
 */
public class registrarse extends javax.swing.JFrame {

    /**
     * Creates new form registrarse
     */
    private static String nombre, apellido, correo, correoVerificar, contraseña, contraseñaVerificar, fullName, materia;

    public registrarse() {
        initComponents();
        setLocationRelativeTo(null);
//        conectarBD bd = new conectarBD();
//        JOptionPane.showMessageDialog(this, bd.mostrarDisp(bd.getMateria("Técnico")));
        ComprobarConexionInternet ie = new ComprobarConexionInternet();
        if (ie.comprobarConexion()) {
            conectarBD bds= new conectarBD();
            this.cbxMateria.setModel(new DefaultComboBoxModel(bds.getMateria("técnico")));
        } else {
            JOptionPane.showMessageDialog(this, "¡No he detectado internet!\n¡recomiendo "
                    + "verificar la conexion a internet y/o reiniciar el sistema!");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCorreoConfirm = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        txtPassword = new javax.swing.JPasswordField();
        jToggleButton2 = new javax.swing.JToggleButton();
        txtPasswordConfirm = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        cbxMateria = new javax.swing.JComboBox<>();
        btnRegistrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 51));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(520, 550));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel2MouseReleased(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setOpaque(false);
        jScrollPane1.setVerifyInputWhenFocusTarget(false);

        jPanel1.setBackground(new java.awt.Color(37, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.setAutoscrolls(true);
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Nombre ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Apellidos ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(0, 0, 0));
        txtNombre.setBorder(null);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 290, 25));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Correo electrónico ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Contraseña");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtCorreo.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreo.setBorder(null);
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 290, 26));

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(0, 0, 0));
        txtApellido.setBorder(null);
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        jPanel1.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 290, 25));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Confirmar correo electrónico ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        txtCorreoConfirm.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtCorreoConfirm.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreoConfirm.setBorder(null);
        txtCorreoConfirm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoConfirmKeyTyped(evt);
            }
        });
        jPanel1.add(txtCorreoConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 290, 25));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Confirmar contraseña");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, -1, -1));

        jToggleButton1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jToggleButton1.setText("Mostrar");
        jToggleButton1.setContentAreaFilled(false);
        jToggleButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton1ItemStateChanged(evt);
            }
        });
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, 30));

        txtPassword.setForeground(new java.awt.Color(0, 0, 0));
        txtPassword.setBorder(null);
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordKeyTyped(evt);
            }
        });
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 290, 25));

        jToggleButton2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jToggleButton2.setText("Mostrar");
        jToggleButton2.setContentAreaFilled(false);
        jToggleButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton2ItemStateChanged(evt);
            }
        });
        jPanel1.add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, -1, 30));

        txtPasswordConfirm.setForeground(new java.awt.Color(0, 0, 0));
        txtPasswordConfirm.setBorder(null);
        txtPasswordConfirm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordConfirmKeyTyped(evt);
            }
        });
        jPanel1.add(txtPasswordConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 290, 25));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Seleccione una de las materias disponibles");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        cbxMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija materia" }));
        cbxMateria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMateriaItemStateChanged(evt);
            }
        });
        jPanel1.add(cbxMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        jScrollPane1.setViewportView(jPanel1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 430, 420));

        btnRegistrar.setBackground(new java.awt.Color(183, 73, 0));
        btnRegistrar.setForeground(new java.awt.Color(240, 240, 240));
        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.setBorder(null);
        btnRegistrar.setContentAreaFilled(false);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.setDefaultCapable(false);
        btnRegistrar.setDoubleBuffered(true);
        btnRegistrar.setFocusPainted(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel2.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 650, 210, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/spinner.gif"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 650, 210, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Go Back_32px.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 14, -1, -1));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Horizontal_Line_32px.png"))); // NOI18N
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 20, -1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setText("Registro");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 16, -1, 38));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Classroom_100px.png"))); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bf8ab7e62f9ed5ebe52998b9d238296a.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 740));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        /*

        //SI LA CONEXION A INTERNET ESTA BIEN, ENTONCES SE PREOCEDE A GUARDAR EL NUEVO MAESTRO.
        ComprobarConexionInternet i = new ComprobarConexionInternet();
        if (i.comprobarConexion()) {
            String numeros = "0123456789@*!$#%&/()=?¡'¿'*+¨´{}[]-.,;:,.-^^``~~~¬¬123";
            if (!(txtNombre.getText().isEmpty()) && !(txtApellido.getText().isEmpty())
                    && !(txtPassword.getText().isEmpty()) && !(txtCorreo.getText().isEmpty()) 
                    && !(txtCorreoConfirm.getText().isEmpty()) && !(txtPasswordConfirm.getText().isEmpty()) ) {

                if (txtCorreo.getText().contains("@")) {
                    if (!(txtNombre.getText().contains(numeros))) { //SE VERIFICA QUE EL NOMBRE CONTENGA SÓLO LETRAS
                        if (!(txtApellido.getText().contains(numeros))) {//SE VERIFICA QUE EL APELLIDO CONTENGA SOLO LETRAS
                            nombre = (txtNombre.getText());
                            apellido = (txtApellido.getText());
                            correo = (txtCorreo.getText());
                            contraseña = (txtPassword.getText());
                            fullName = nombre + " " + apellido;
                            new menú(fullName, correo).setVisible(true);

                            //Cerrar REGISTRAR
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Verifique que sus apellidos esten bien escritos.", "Información", 0);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Verifique que su nombres esten bien escritos.", "Información", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Verifique que sea una dirección de correo electronico válida.", "Información", 0);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Todos los campos están vacíos.\n\nPor favor, complete el formulario.", "Información", 0);
            }
            
            
         */
        //COMPROBACIÓN INDIVIDUAL DE CADA CAMPO

        //Desactivar el boton, para evitar problemas
        btnRegistrar.setEnabled(false);
        //SI LA CONEXION A INTERNET ESTA BIEN, ENTONCES SE PREOCEDE A GUARDAR EL NUEVO MAESTRO.
        ComprobarConexionInternet i = new ComprobarConexionInternet();
        if (i.comprobarConexion()) {
            boolean nombrebol, apellidobol, correobol, correoConfirm, contra, contraConfirm, materiabol;
            nombrebol = apellidobol = correobol = correoConfirm = contra = contraConfirm = materiabol = false;
            String campos = "";

            //EN PRIMERA INSTANCIA, SE COMPRUEBA SI TODOS LOS CAMPOS ESTAN VACIOS
            if (!(txtNombre.getText().isEmpty()) && !(txtApellido.getText().isEmpty())
                    && !(txtPassword.getText().isEmpty()) && !(txtCorreo.getText().isEmpty())
                    && !(txtCorreoConfirm.getText().isEmpty()) && !(txtPasswordConfirm.getText().isEmpty())) {
                //SI NO ESTAN VACIOS, LAS VARIABLES SE ENVIAN
                nombre = (txtNombre.getText());
                apellido = (txtApellido.getText());
                correo = (txtCorreo.getText());
                correoVerificar = (txtCorreoConfirm.getText());
                contraseña = (txtPassword.getText());
                contraseñaVerificar = (txtPasswordConfirm.getText());
                fullName = nombre + " " + apellido;
                materia = cbxMateria.getSelectedItem().toString();

                if (cbxMateria.getSelectedItem().toString() != "Elija una materia") {
                    //Aqui se ingresa el nuevo maestro a la BD Online
                    if (correo.equalsIgnoreCase(correoVerificar)) {
                        if (contraseña.equals(contraseñaVerificar)) {
                            //Creando una instancia de la clase conectarBD para la inserción
                            conectarBD bd = new conectarBD();

                            //SIMPLE FACTORY
                            //Abrir el menú una vez que se ha registrado en la BD
                            if (bd.RegistrarMaestro(correo, nombre, apellido, contraseña, materia, null)) {
                                JOptionPane.showMessageDialog(this, "Felicidades " + fullName
                                        + "\nse ha registrado satisfactoriamente en el sistema"
                                        + "\nen seguida iniciará sesión automáticamente", "Registro completo", 1);
                                SimpleFactory simpleFactory = new SimpleFactory();
                                simpleFactory.constructorObjetosVariables(3, fullName, materia, null);
                                simpleFactory = null;
                                //Cerrar REGISTRAR
                                this.dispose();
                            } else {
                                JOptionPane.showMessageDialog(this, "Algo salió mal,"
                                        + " revise su conexión a internet y vuelva a interntarlo", "Información", 0);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Los campos de contraseña no coinciden", "Información", 0);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Los campos de correo no coinciden", "Información", 0);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Le falta elegir de la lista desplegable la materia", "Información", 0);
                }

            } else {

                //AQUI SE COMPRUEBA si cada campo tiene algun valor
                if ((txtNombre.getText()).length() == 0) {
                    nombrebol = true;
                }
                if ((txtApellido.getText()).length() == 0) {
                    apellidobol = true;
                }

                if ((txtCorreo.getText()).length() == 0) {
                    correobol = true;
                }

                if ((txtCorreoConfirm.getText()).length() == 0) {
                    correoConfirm = true;
                }

                if ((txtPassword.getText()).length() == 0) {
                    contra = true;
                }

                if ((txtPasswordConfirm.getText()).length() == 0) {
                    contraConfirm = true;
                }
                
                if (cbxMateria.getSelectedItem().toString().equalsIgnoreCase("Elija una sección")) {
                    materiabol = true;
                }
                if (cbxMateria.getSelectedItem().toString().equalsIgnoreCase("Elija una materia")) {
                    materiabol = true;
                }

                //MOSTRAR UN MENSAJE SOBRE QUE CAMPOS FALTAN
                if (nombrebol == true || apellidobol == true || correobol == true
                        || correoConfirm == true || contra == true || contraConfirm == true
                        || materiabol == true) {
                    //Logic
                    String nombrecad = "", apellidocad = "", correocad = "",
                            correoConfirmcad = "", contracad = "", contraConfirmcad = "", materiacad = "";
                    if (nombrebol) {
                        nombrecad += "Nombre\n";
                    }
                    if (apellidobol) {
                        apellidocad += "Apellido\n";
                    }
                    if (correobol) {
                        correocad += "Correo\n";
                    }
                    if (correoConfirm) {
                        correoConfirmcad += "Confirmar correo\n";
                    }
                    if (contra) {
                        contracad += "Contraseña\n";
                    }
                    if (contraConfirm) {
                        contraConfirmcad += "Confirmar contraseña\n";
                    }
                    
                    if (materiabol) {
                        materiacad += "Materia (Combobox)\n";
                    }

                    campos += nombrecad + apellidocad + correocad + 
                            correoConfirmcad + contracad + contraConfirmcad + materiacad;
                    JOptionPane.showMessageDialog(this, "Los siguientes campos están vacíos.\n" + campos + "\nPor favor, complete el formulario.", "Información", 0);
                }
            }

        }
        //Reactivar el boton, para que vuelva a intentarlo
        btnRegistrar.setEnabled(true);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.dispose();
        SimpleFactory simpleFactory = new SimpleFactory();
        simpleFactory.constructorObjetos(2); //Login
        simpleFactory = null;
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        this.setExtendedState(1);
    }//GEN-LAST:event_jLabel17MouseClicked
    int xy, xx;
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        setOpacity((float) 0.8);
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    //VALIDANDO QUE EL USUARIO INGRESE SÓLO LETRAS
    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped

        if ((txtNombre.getText().length() <= 30)) {
            char C = evt.getKeyChar();
            if (Character.isDigit(C) || ((int) evt.getKeyChar() > 32 && (int) evt.getKeyChar() <= 47
                    || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 64
                    || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 96
                    || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 129
                    || (int) evt.getKeyChar() >= 131 && (int) evt.getKeyChar() <= 159
                    || (int) evt.getKeyChar() >= 166 && (int) evt.getKeyChar() <= 255)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Ingrese solo letras.", "Dato erróneo", 0);
                txtNombre.setCursor(null);
            }
        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped

        if ((txtApellido.getText().length() <= 30)) {
            char C = evt.getKeyChar();
            if (Character.isDigit(C) || ((int) evt.getKeyChar() > 32 && (int) evt.getKeyChar() <= 47
                    || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 64
                    || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 96
                    || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 129
                    || (int) evt.getKeyChar() >= 131 && (int) evt.getKeyChar() <= 159
                    || (int) evt.getKeyChar() >= 166 && (int) evt.getKeyChar() <= 255)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Ingrese solo letras.", "Dato erróneo", 0);
                txtApellido.setCursor(null);
            }
        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    //Metodo para Mostrar/Ocultar contraseña.
    private void jToggleButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleButton1ItemStateChanged
        if (jToggleButton1.isSelected()) {
            jToggleButton1.setText("Ocultar");
            txtPassword.setEchoChar((char) 0); //Mostrar la contraseña
        } else {
            jToggleButton1.setText("Mostrar");
            txtPassword.setEchoChar('*'); //Ocultar la contraseña
        }
    }//GEN-LAST:event_jToggleButton1ItemStateChanged

    //Metodo para Mostrar/Ocultar contraseña.
    private void jToggleButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleButton2ItemStateChanged
        if (jToggleButton2.isSelected()) {
            jToggleButton2.setText("Ocultar");
            txtPasswordConfirm.setEchoChar((char) 0); //Mostrar la contraseña
        } else {
            jToggleButton2.setText("Mostrar");
            txtPasswordConfirm.setEchoChar('*'); //Ocultar la contraseña
        }
    }//GEN-LAST:event_jToggleButton2ItemStateChanged

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        setOpacity((float) 1.0);
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        setOpacity((float) 0.8);
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseReleased
        setOpacity((float) 1.0);
    }//GEN-LAST:event_jPanel2MouseReleased

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel2MouseDragged

    //CBXMATERIA
    private void cbxMateriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMateriaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMateriaItemStateChanged

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
        // TODO add your handling code here:

//        || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 129))
//        || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 63
//        || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 94
//        || (int) evt.getKeyChar() == 96))
        if ((txtCorreo.getText().length() < 50)) {
            char C = evt.getKeyChar();
            if (((int) evt.getKeyChar() >= 32 && (int) evt.getKeyChar() <= 44
                    || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 63
                    || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 94
                    || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 129
                    || (int) evt.getKeyChar() == 96)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Ingrese solo caracteres permitidos "
                        + "\nen un correo electronico, revise en que se esta equivocando.", "Dato erróneo", 0);
            }
        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }
    }//GEN-LAST:event_txtCorreoKeyTyped

    private void txtCorreoConfirmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoConfirmKeyTyped
        // TODO add your handling code here:
        if ((txtCorreoConfirm.getText().length() < 50)) {
            char C = evt.getKeyChar();
            if (((int) evt.getKeyChar() >= 32 && (int) evt.getKeyChar() <= 44
                    || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 63
                    || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 94
                    || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 129
                    || (int) evt.getKeyChar() == 96)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Ingrese solo caracteres permitidos "
                        + "\nen un correo electronico, revise en que se esta equivocando.", "Dato erróneo", 0);
            }
        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }
    }//GEN-LAST:event_txtCorreoConfirmKeyTyped

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyTyped

        // TODO add your handling code here:
        if ((txtPassword.getText().length() < 20)) {

        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }
    }//GEN-LAST:event_txtPasswordKeyTyped

    private void txtPasswordConfirmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordConfirmKeyTyped
        // TODO add your handling code here:i

        if ((txtPasswordConfirm.getText().length() < 20)) {

        } else {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ha superado la longitud del dato esperado", "Dato erróneo", 0);
        }

    }//GEN-LAST:event_txtPasswordConfirmKeyTyped

//    public String[] getOpcion(String años) {
//        String[] opcion = new String[3];
//        if (años.equalsIgnoreCase("primer año") || años.equalsIgnoreCase("segundo año")) {
//            opcion[0] = "Elija opción";
//            opcion[1] = "General";
//            opcion[2] = "Técnico";
//        } else {
//            opcion[0] = "Técnico";
//        }
//        return opcion;
//    }
//
//    public String[] getSeccion(String opcion) {
//        String[] seccion = new String[4];
//        if (opcion.equalsIgnoreCase("general")) {
//            seccion[0] = "Elija sección";
//            seccion[1] = "A";
//            seccion[2] = "B";
//            seccion[3] = "C";
//        }
//        if (opcion.equalsIgnoreCase("técnico")) {
//            seccion[0] = "A";
//        }
//        return seccion;
//    }
//
//    public String[] getMateria(String opcion) {
//        String[] materia = new String[12];
//        if (opcion.equalsIgnoreCase("general")) {
//            materia[0] = "Matemáticas";
//            materia[1] = "Sociales";
//            materia[2] = "Ciencia";
//            materia[3] = "Lenguaje";
//            materia[4] = "Ingles";
//            materia[5] = "Orientación para la vida";
//            materia[6] = "Informática";
//            materia[7] = "Seminario";
//            materia[8] = "Habilitación laboral";
//        }
//        if (opcion.equalsIgnoreCase("técnico")) {
//            materia[0] = "Matemáticas";
//            materia[1] = "Sociales";
//            materia[2] = "Ciencia";
//            materia[3] = "Lenguaje";
//            materia[4] = "Ingles";
//            materia[5] = "Orientación para la vida";
//            materia[6] = "Seminario";
//            materia[7] = "Informática";
//            materia[8] = "Tecnología";
//            materia[9] = "Matemáticas financieras";
//            materia[10] = "Laboratorio de creatividad";
//            materia[11] = "Prácticas contables";
//        }
//        return materia;
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrarse.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrarse.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrarse.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrarse.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrarse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cbxMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorreoConfirm;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirm;
    // End of variables declaration//GEN-END:variables
}
